package {package};

import java.util.*;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.beans.factory.annotation.Autowired;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.extern.slf4j.Slf4j;
{cloneImports}
/**
 * {description}
 * @author {author}
 * {date}
 */
@Slf4j
@Api(tags = "description")
@Controller
@ResponseBody
@RequestMapping("/{entity}")
public class {Controller}{

    @Autowired
    private {Service} {service};

    /**保存*/
    @ApiOperation(value="保存",notes = "保存{entityDescription}",produces = "application/json;charset=utf-8")
    @RequestMapping(value = "/save",method = RequestMethod.POST,produces = "application/json;charset=utf-8")
    public Map<String,Object> saveOrUpdate(@ApiParam(value = "请求体参数",required = true) @RequestBody {Entity} {entity}){
        log.debug("进入-保存{entityDescription}服务：{}",{entity});
        Map<String,Object> result= new HashMap<>();
        result.put("total",{service}.saveOrUpdate({entity}));
        result.put("status",true);
        result.put("msg","请求成功");
        log.debug("退出-{entityDescription}服务：{}",result);
        return result;
    }

    /**批量保存*/
    @ApiOperation(value="批量保存",notes = "批量保存{entityDescription}",produces = "application/json;charset=utf-8")
    @RequestMapping(value = "/saveBatch",method = RequestMethod.POST,produces = "application/json;charset=utf-8")
    public Map<String,Object> saveOrUpdateBatch(@ApiParam(value = "请求体参数",required = true) @RequestBody List<{Entity}> {entity}s){
        log.debug("进入-批量保存{entityDescription}服务：{}",{entity}s);
        Map<String,Object> result = new HashMap<>();
        result.put("total",{service}.saveOrUpdateBatch({entity}s));
        result.put("status",true);
        result.put("msg","请求成功");
        log.debug("退出-批量保存{entityDescription}服务：{}",result);
        return result;
    }

    /**查询分页*/
    @ApiOperation(value="查询",notes = "查询{entityDescription}列表（分页查询）",produces = "application/json;charset=utf-8")
    @RequestMapping(value = "/find",method = RequestMethod.POST,produces = "application/json;charset=utf-8")
    public Map<String,Object> find(@ApiParam(value = "请求体参数",required = true) @RequestBody {Entity} {entity},@ApiParam(value = "页数",required = true) @RequestParam("page") int page,@ApiParam(value = "页大小",required = true) @RequestParam("pageSize") int pageSize){
        log.debug("进入-查询{entityDescription}列表服务：{}/{}/{}",{entity},page,pageSize);
        Map<String,Object> result = new HashMap<>();
        LambdaQueryWrapper<{Entity}> queryWrapper = new LambdaQueryWrapper<>(new {Entity}());
        IPage<{Entity}> iPage = new Page<>(page,pageSize);
        iPage={service}.page(iPage,queryWrapper);
        result.put("total",iPage.getTotal());
        result.put("body",iPage.getRecords());
        result.put("status",true);
        result.put("msg","请求成功");
        log.debug("退出-查询{entityDescription}服务：{}",result);
        return result;
    }

    /**详情*/
    @ApiOperation(value="详情",notes = "查看{entityDescription}详情",produces = "application/json;charset=utf-8")
    @RequestMapping(value = "/detail/{{primaryKeyField}}",method = RequestMethod.GET,produces = "application/json;charset=utf-8")
    public Map<String,Object> detail(@ApiParam(value = "{entityDescription}Id",required = true) @PathVariable {PrimaryKeyField} {primaryKeyField}){
        log.debug("进入-查询{entityDescription}详情服务：{}",{primaryKeyField});
        Map<String,Object> result= new HashMap<>();
        {Entity} {entity} = {service}.getById({primaryKeyField});
        result.put("body",{entity});
        result.put("status",true);
        result.put("msg","请求成功");
        log.debug("退出-查询{entityDescription}详情服务：{}",result);
        return result;
    }

    /**删除*/
    @ApiOperation(value="删除",notes = "删除{entityDescription}",produces = "application/json;charset=utf-8")
    @RequestMapping(value = "/remove/{{primaryKeyField}}",method = RequestMethod.DELETE,produces = "application/json;charset=utf-8")
    public Map<String,Object> deleteById(@ApiParam(value = "{entityDescription}Id",required = true) @PathVariable {PrimaryKeyField} {primaryKeyField}){
        log.debug("进入-删除{entityDescription}服务：{}",{primaryKeyField});
        Map<String,Object> result= new HashMap<>();
        result.put("total",{service}.removeById({primaryKeyField}));
        result.put("status",true);
        result.put("msg","请求成功");
        log.debug("退出-删除{entityDescription}服务：{}",result);
        return result;
    }
}